Template.searchLandingPage.helpers({
	categories: function() {
		return Categories.find();
	},
	category: function() {
		if (this.title === 'Computers, Tablets & Related') {
			return 'Computers & Related';
		} else {
			return this.title;
		}
	},
	spellCheckSuggestions: function() {
		let searchString1 = Router.current().params.searchString1;
		let searchString2 = Router.current().params.searchString2;
		
		spellCheckSuggestions = ReactiveMethod.call('spellCheckSuggestionsMethod', searchString1, searchString2);

		let spellCheckUseful;

		let typeFilter = Router.current().params.typeFilter;

		let vsPresent;
		
		for (let i = 0; i < spellCheckSuggestions.length; i++) {
			if (spellCheckSuggestions[i] == 'v') {
				if (spellCheckSuggestions[i - 1] == ' ' && spellCheckSuggestions[i + 1] == 's' && spellCheckSuggestions[i + 2] == ' ' ) {
					vsPresent = true;
				}
			}
		}

		if (vsPresent) {
			for (let i = 0; i < spellCheckSuggestions.length; i++) {
				if (spellCheckSuggestions[i] == 'v') {
					if (spellCheckSuggestions[i + 1] == 's') {
						searchString1 = spellCheckSuggestions.substring(0, i - 1);
						searchString2 = spellCheckSuggestions.substring(i + 3, spellCheckSuggestions.length);
						
						spellCheckUseful = ReactiveMethod.call('spellCheckNecessaryMethod', searchString1, searchString2, typeFilter);
					}
				}
			}
		} else if (searchString1 != 'null') {
			searchString1 = spellCheckSuggestions;
			searchString2 = 'null';

			spellCheckUseful = ReactiveMethod.call('spellCheckNecessaryMethod', searchString1, searchString2, typeFilter);
		} else if (searchString2 != 'null') {
			searchString1 = 'null';
			searchString2 = spellCheckSuggestions;
			
			spellCheckUseful = ReactiveMethod.call('spellCheckNecessaryMethod', searchString1, searchString2, typeFilter);
		}

		if (spellCheckSuggestions == undefined) {
			return false;
		} else if (spellCheckUseful) {
			return spellCheckSuggestions;
		}
	},
	searchString1Helper: function() {
		return Router.current().params.searchString1;
	},
	searchString2Helper: function() {
		return Router.current().params.searchString2;
	},
	searchLimitHelper: function() {
		if (Router.current().params.searchLimit) {
			return Router.current().params.searchLimit;
		}
	},
	isSingle: function() {
		if (Router.current().params.typeFilter == 'single') {
			return 'active';
		}
	},
	isDouble: function() {
		if (Router.current().params.typeFilter == 'comparison') {
			return 'active';
		}
	},
	isAll: function() {
		if (Router.current().params.typeFilter == 'all') {
			return 'active';
		}
	},
	isSingleDouble: function() {
		if (Router.current().params.typeFilter == 'single' || Router.current().params.typeFilter == 'comparison') {
			return true;
		}
	}
});

Template.searchResultItem.helpers({
	revTitleDouble: function() {
		var title1 = this.revTitle[0];
		var title2 = this.revTitle[1];
		
		var fullTitle = title1 + ' vs ' + title2; 
		return fullTitle;
	}
});

Template.searchLandingPage.events({
	'click .filters-show': function() {
		if ($('.filters-show').find('span').hasClass('glyphicon-chevron-down')) {
			$('.filters-show').find('span').removeClass('glyphicon-chevron-down');
			$('.filters-show').find('span').addClass('glyphicon-chevron-up');
		} else if ($('.filters-show').find('span').hasClass('glyphicon-chevron-up')) {
			$('.filters-show').find('span').removeClass('glyphicon-chevron-up');
			$('.filters-show').find('span').addClass('glyphicon-chevron-down');
		}
	},
	'click #spellCheckRedirect': function(e) {
		e.preventDefault();
		
		let searchString1 = Router.current().params.searchString1;
		let searchString2 = Router.current().params.searchString2;
		let typeFilter = Router.current().params.typeFilter;

		let vsPresent;
		
		for (let i = 0; i < spellCheckSuggestions.length; i++) {
			if (spellCheckSuggestions[i] == 'v') {
				if (spellCheckSuggestions[i - 1] == ' ' && spellCheckSuggestions[i + 1] == 's' && spellCheckSuggestions[i + 2] == ' ' ) {
					vsPresent = true;
				}
			}
		}

		if (vsPresent) {
			for (let i = 0; i < spellCheckSuggestions.length; i++) {
				if (spellCheckSuggestions[i] == 'v') {
					if (spellCheckSuggestions[i + 1] == 's') {
						searchString1 = spellCheckSuggestions.substring(0, i - 1);
						searchString2 = spellCheckSuggestions.substring(i + 3, spellCheckSuggestions.length);
						
						Router.go('searchLandingPage', {searchString1, searchString2, typeFilter});
					}
				}
			}
		} else if (searchString1 != 'null') {
			searchString1 = spellCheckSuggestions;

			Router.go('searchLandingPage', {searchString1, searchString2, typeFilter});
		} else if (searchString2 != 'null') {
			searchString2 = spellCheckSuggestions;
			
			Router.go('searchLandingPage', {searchString1, searchString2, typeFilter});
		}
	}
});
